@model SportGuideASP.Core.ViewModels.UserViewModel.SignIn

@{
	ViewBag.Title = "Вход";
}

@*"SignIn", "User", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post*@
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "Ошибка:", new { @class = "text-danger" })

	<div class="form-horizontal form-content">
		<h3>Вход</h3>
		<hr />
		<div>
			<div class="form-group">
				@Html.LabelFor(t => t.Email, new { @class = "col-md-offset-1 col-md-2" })
				<div class="col-md-5">
					@Html.TextBoxFor(t => t.Email, new { @class = "form-control" })
				</div>
				@Html.ValidationMessageFor(t => t.Email, "", new { @class = "text-danger col-md-4 validation-message" })
			</div>

			<div class="form-group">
				@Html.LabelFor(t => t.Password, new { @class = "col-md-offset-1 col-md-2" })
				<div class="col-md-5">
					@Html.PasswordFor(t => t.Password, new { @class = "form-control" })
				</div>
				@Html.ValidationMessageFor(t => t.Password, "", new { @class = "text-danger col-md-4 validation-message" })
			</div>

			<div class="form-group">
				<div class="col-md-offset-3 col-md-1">
					<div id="vk-login" href="#" class="btn btn-default" >VK</div>
					<div id="vk_api_transport"></div>
				</div>
			</div>

			<div class="col-md-offset-3 col-md-4 input-submit-wrapper">
				<input type="submit" value="Войти" class="btn btn-success" />
			</div>
		</div>
	</div>
}


<script>
	window.vkAsyncInit = function() {
		VK.init({
			apiId: @ViewBag.VK_ApiId,
		});
	};

	setTimeout(function() {
		var el = document.createElement("script");
		el.type = "text/javascript";
		el.src = "//vk.com/js/api/openapi.js";
		el.async = true;
		document.getElementById("vk_api_transport")
			.appendChild(el)
			.addEventListener("load", function() {
				document.getElementById("vk-login").addEventListener("click", function() {
					VK.Auth.login(function(e) {
						test = e
					}, 4194304);
				})

				VK.Observer.subscribe("auth.login", function(e){
					// on login
				});

				VK.Observer.subscribe("auth.statusChange", function(e){
					// on status change
				})

				VK.Observer.subscribe("auth.sessionChange", function(e){
					console.info("sessionChange", e)
					if (!e.session || e.settings === undefined)
						return;

					var u = e.session.user;
					var url = "/User/AuthVK?uid=" + u.id +
							  "&first_name=" + u.first_name +
							  "&last_name=" + u.last_name

					location.href = url;
				})

				VK.Observer.subscribe("auth.logout", function(e){
					// on logout
				})
			});
	}, 0);

	//VK.UI.button('vk-login');
</script>

@section Styles{
	<link href="~/Content/User/site.css" rel="stylesheet" />
}

@section Scripts{
	<script src="~/Scripts/jquery.validate.min.js"></script>
	<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}
